{"version":3,"sources":["transitions/pop.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/ContactForm/ContactForm.jsx","components/Section/Section.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactsFilter/ContactsFilter.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js","transitions/slide.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInput","e","setState","target","value","submitForm","contact","id","uuid","props","handleSubmit","this","onSubmit","placeholder","onChange","type","options","delimiter","blocks","numericOnly","Component","Section","title","children","className","styles","section","Contact","handleDelete","onClick","ContactList","contacts","contactItems","map","CSSTransition","key","classNames","slideTransitions","timeout","TransitionGroup","component","ContactsFilter","filter","Notification","container","App","didMount","filterContacts","toLowerCase","includes","preventDefault","findIndex","item","contactExistModal","setTimeout","ps","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","in","appear","length","filterTransition","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66d7e48a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2Ycj5\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Cleave from 'cleave.js/react';\nimport { v4 as uuid } from 'uuid';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  submitForm = e => {\n    const contact = {\n      id: uuid(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.handleSubmit(e, contact);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.submitForm}>\n        <div>\n          <h3>Name</h3>\n          <input\n            placeholder=\"Enter name\"\n            onChange={this.handleInput}\n            name=\"name\"\n            value={name}\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <h3>Number</h3>\n          <Cleave\n            onChange={this.handleInput}\n            name=\"number\"\n            placeholder=\"Enter phone number\"\n            value={number}\n            options={{\n              delimiter: '-',\n              blocks: [3, 2, 2],\n              numericOnly: true,\n            }}\n          />\n        </div>\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\nconst Section = props => {\n  const { title, children } = props;\n  return (\n    <div className={styles.section}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Contact = ({ name = '', number = '', handleDelete }) => (\n  <div>\n    <span>\n      {name || 'noName'}: {number || 'noNumber'}\n    </span>\n    <button onClick={handleDelete} type=\"button\">\n      Delete\n    </button>\n  </div>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Contact from '../Contact/Contact';\nimport PropTypes from 'prop-types';\nimport slideTransitions from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  const contactItems = contacts.map(({ id, name, number }) => {\n    const deleteItem = () => {\n      handleDelete(id);\n    };\n    return (\n      <CSSTransition key={id} classNames={slideTransitions} timeout={200}>\n        <li key={id}>\n          <Contact\n            handleDelete={deleteItem}\n            id={id}\n            name={name}\n            number={number}\n          />\n        </li>\n      </CSSTransition>\n    );\n  });\n  return <TransitionGroup component=\"ul\">{contactItems}</TransitionGroup>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactsFilter = ({ onChange, filter }) => {\n  return (\n    <div>\n      <input type=\"text\" value={filter} onChange={onChange} name=\"filter\" />\n    </div>\n  );\n};\n\nContactsFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\nexport default ContactsFilter;\n","import React from 'react';\nimport styles from './Notification.module.css';\nconst Notification = () => {\n  return (\n    <div className={styles.container}>\n      <p>Contact already exists!</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Section from '../Section/Section';\n\nimport ContactList from '../ContactList/ContactList';\nimport ContactsFilter from '../ContactsFilter/ContactsFilter';\nimport { CSSTransition } from 'react-transition-group';\nimport slideTransitions from '../../transitions/slide.module.css';\nimport filterTransition from '../../transitions/pop.module.css';\nimport Notification from '../Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    didMount: false,\n  };\n  componentDidMount() {\n    let contacts = [];\n    try {\n      contacts =\n        JSON.parse(localStorage.getItem('contacts')) || this.state.contacts;\n    } catch (e) {\n      contacts = [];\n    }\n    this.setState(ps => {\n      return {\n        contacts,\n        didMount: true,\n      };\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(\n      'contacts',\n      JSON.stringify(this.state.contacts, null, 2),\n    );\n  }\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n  handleInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleSubmit = (e, contact) => {\n    e.preventDefault();\n    if (\n      this.state.contacts.findIndex(item => item.name === contact.name) !== -1\n    ) {\n      this.setState({\n        contactExistModal: true,\n      });\n      setTimeout(() => {\n        this.setState({ contactExistModal: false });\n      }, 2000);\n      return false;\n    }\n    this.setState(state => {\n      return {\n        contacts: [...state.contacts, contact],\n        filter: '',\n      };\n    });\n  };\n\n  handleDelete = id => {\n    this.setState(ps => {\n      return {\n        contacts: ps.contacts.filter(item => item.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const {\n      name,\n      number,\n      contacts,\n      filter,\n      didMount,\n      contactExistModal,\n    } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <div>\n        <CSSTransition\n          in={didMount}\n          classNames={slideTransitions}\n          timeout={250}\n          key={0}\n          appear\n        >\n          <h1>Phonebook</h1>\n        </CSSTransition>\n        <Section>\n          <ContactForm\n            name={name}\n            number={number}\n            handleSubmit={this.handleSubmit}\n            handleInput={this.handleInput}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          <CSSTransition\n            in={contacts.length > 1}\n            classNames={filterTransition}\n            timeout={250}\n            unmountOnExit\n          >\n            <ContactsFilter onChange={this.handleInput} filter={filter} />\n          </CSSTransition>\n\n          <ContactList\n            handleDelete={this.handleDelete}\n            contacts={filteredContacts}\n          />\n        </Section>\n        <CSSTransition\n          in={contactExistModal}\n          classNames={filterTransition}\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};"],"sourceRoot":""}